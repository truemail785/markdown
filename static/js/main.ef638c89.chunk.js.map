{"version":3,"sources":["Banks.js","App.js","serviceWorker.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","bankTwo","bankThree","bank","n","store","createStore","action","type","DrumMachine","props","state","volume","power","poweron","poweroff","bank1","bank2","slider","handleButton","bind","handleChange","handlePower","handleBank","handleKeyPress","btn","temp","this","filter","a","audio","Audio","src","Number","play","setState","event","target","value","newBank","includes","String","fromCharCode","document","addEventListener","removeEventListener","className","onClick","style","backgroundColor","display","min","max","onChange","textAlign","Component","Container","connect","dispatch","getBank","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef638c89.chunk.js","sourcesContent":["const bankOne = [{\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  }, {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  }, {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  }, {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  }, {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  }, {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  }, {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  }, {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  }, {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  },\r\n];\r\n\r\nconst bankTwo = [{\r\n  keyCode: 81,\r\n  keyTrigger: 'Q',\r\n  id: 'Chord-1',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n}, {\r\n  keyCode: 87,\r\n  keyTrigger: 'W',\r\n  id: 'Chord-2',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n}, {\r\n  keyCode: 69,\r\n  keyTrigger: 'E',\r\n  id: 'Chord-3',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n}, {\r\n  keyCode: 65,\r\n  keyTrigger: 'A',\r\n  id: 'Shaker',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n}, {\r\n  keyCode: 83,\r\n  keyTrigger: 'S',\r\n  id: 'Open-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n}, {\r\n  keyCode: 68,\r\n  keyTrigger: 'D',\r\n  id: 'Closed-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n}, {\r\n  keyCode: 90,\r\n  keyTrigger: 'Z',\r\n  id: 'Punchy-Kick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n}, {\r\n  keyCode: 88,\r\n  keyTrigger: 'X',\r\n  id: 'Side-Stick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n}, {\r\n  keyCode: 67,\r\n  keyTrigger: 'C',\r\n  id: 'Snare',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n}];\r\nconst bankThree = [{keyCode: \"\",keyTrigger: '',id: '',url: ''},{keyCode: \"\",keyTrigger: '',id: '',url: ''},\r\n{keyCode: \"\",keyTrigger: '',id: '',url: ''},{keyCode: \"\",keyTrigger: '',id: '',url: ''},\r\n{keyCode: \"\",keyTrigger: '',id: '',url: ''},{keyCode: \"\",keyTrigger: '',id: '',url: ''},\r\n{keyCode: \"\",keyTrigger: '',id: '',url: ''},{keyCode: \"\",keyTrigger: '',id: '',url: ''},\r\n{keyCode: \"\",keyTrigger: '',id: '',url: ''}];\r\nconst bank = (n)=>{\r\n    return n==1? bankOne: n==2?bankTwo:n==3? bankThree:\"\";\r\n}\r\n\r\nexport default bank","import React, {Component} from 'react'\nimport { Provider, connect } from 'react-redux'\nimport { createStore, combineReducers } from 'redux'\nimport './App.css';\nimport bank from \"./Banks\";\n\nconst BANK = \"BANK\";\nconst getBank = (n)=>({type:BANK,n})\nconst bankReducer = (state = \"\",action)=>{\n  switch(action.type){\n    case BANK:\n      return bank(action.n); \n    default: \n    return bank(1)\n  }\n}\nconst store  = createStore(bankReducer)\n\nclass DrumMachine extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      state:\"POWERED ON\",\n      volume: \"50\",\n      power: true,\n      poweron: \"violet\",\n      poweroff: \"black\",\n      bank: true,\n      bank1: \"violet\",\n      bank2 :\"black\",\n      slider: \"initial\"\n    }\n    this.handleButton = this.handleButton.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handlePower = this.handlePower.bind(this)\n    this.handleBank = this.handleBank.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n  handleButton(btn){\n    let temp = this.props.bank.filter(a=>a.keyTrigger==btn)\n    let audio = new Audio\n    audio.src = temp[0].url\n    audio.volume = Number(this.state.volume)/100\n    audio.play()\n    if(this.state.power){\n      this.setState({state: temp[0].id})\n    }\n  }\n  handleChange(event){\n    this.setState({volume: event.target.value,state: \"VOLUME: \"+this.state.volume})\n  }\n  handlePower(){\n    if(this.state.power){\n      this.handleBank()\n      this.setState({power: false,poweroff: \"violet\",poweron: \"black\",slider: \"none\",volume: \"0\",state: \"POWERED OFF\"})\n    }else{\n      this.setState({power: true,poweroff:\"black\",poweron: \"violet\",slider: \"initial\",volume: \"50\",state: \"POWERED ON\"})\n    }\n  }\n  handleBank(){\n    if(this.state.power){\n      if(this.state.bank){\n        this.setState({bank: false,bank1: \"black\",bank2: \"violet\",state: \"BANK 2\"})\n        this.props.newBank(2)\n      }else{\n        this.setState({bank: true,bank1:\"violet\",bank2: \"black\",state: \"BANK 1\"})\n        this.props.newBank(1)\n      }\n    }\n  }\n  handleKeyPress(event){\n    let arr = [81, 87, 69, 65, 83, 68, 90, 88, 67]\n    if(arr.includes(event.keyCode)){\n      this.handleButton(String.fromCharCode(event.keyCode))\n    }\n  }\n  componentDidMount(){\n    document.addEventListener(\"keydown\",this.handleKeyPress)\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleKeyPress)\n  }\n\n  render(){\n    return (\n      <div className = \"container\">\n        <div className = \"appDiv\">\n        <p id = \"jerry\">JERRY'S</p>\n          <div className = \"drumDiv\">\n            <div className = \"buttonDiv\">\n              <button onClick = {()=>(this.handleButton(\"Q\"))} className = \"drumButton\">Q</button>\n              <button onClick = {()=>(this.handleButton(\"W\"))} className = \"drumButton\">W</button>\n              <button onClick = {()=>(this.handleButton(\"E\"))} className = \"drumButton\">E</button>\n              <button onClick = {()=>(this.handleButton(\"A\"))} className = \"drumButton\">A</button>\n              <button onClick = {()=>(this.handleButton(\"S\"))} className = \"drumButton\">S</button>\n              <button onClick = {()=>(this.handleButton(\"D\"))} className = \"drumButton\">D</button>\n              <button onClick = {()=>(this.handleButton(\"Z\"))} className = \"drumButton\">Z</button>\n              <button onClick = {()=>(this.handleButton(\"X\"))} className = \"drumButton\">X</button>\n              <button onClick = {()=>(this.handleButton(\"C\"))} className = \"drumButton\">C</button>  \n            </div>\n\n            <div className= \"optDiv\">\n              <div id = \"powerDiv\">\n                <p>POWER</p>\n                <div className = \"optButtons\">\n                  <button onClick = {this.handlePower} className = \"powerButton\" style = {{backgroundColor: this.state.poweron}}></button>\n                  <button onClick = {this.handlePower} className = \"powerButton\" style = {{backgroundColor: this.state.poweroff}}></button>\n                </div>\n              </div>\n              <p id = \"state\">{this.state.state}</p>\n              <input style = {{display: this.state.slider}} className = \"slider\" type = \"range\" value = {this.state.volume} min  = \"1\" max = \"100\" onChange = {this.handleChange} />\n\n              <div id = \"bankDiv\">\n                <p>BANK</p>\n                <div className = \"bankButtons\">\n                  <button onClick = {this.handleBank} className = \"bankButton\" style = {{backgroundColor: this.state.bank1}}></button>\n                  <button onClick = {this.handleBank} className = \"bankButton\" style = {{backgroundColor: this.state.bank2}}></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p style = {{textAlign: \"center\"}}>Created By Ozair</p>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (state)=>({bank: state})\nconst mapDispatchToProps = (dispatch)=>({\n  newBank:(n)=>(dispatch(getBank(n)))\n})\nconst Container = connect(mapStateToProps,mapDispatchToProps)(DrumMachine)\n\nconst App = ()=>{\n  return (\n    <Provider store = {store}>\n    <Container />\n    </Provider>\n  )\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}